{"version":3,"sourceRoot":"","sources":["../scss/theme/members/_fonts.scss","../scss/01-base/_base.scss","../scss/theme/vendors/_lessier.scss","../scss/02-module/_module.scss","../scss/03-layout/_layout-main.scss","../scss/03-layout/_layout-image.scss","../scss/theme/members/_mixins.scss","../scss/03-layout/_layout-information.scss","../scss/03-layout/_layout-stats.scss","../scss/03-layout/_layout-attribution.scss","../scss/04-state/_state.scss"],"names":[],"mappings":"AACQ;ACMR;EACI;ECgOI;;;AD5NR;EACI;EACA;EACA;;;AAGJ;EACI;EACA;;ACsNI;EAEW;;;ADjNnB;AAAA;AAAA;EAEO;;;AAEP;EACI;EACA;;ACqLA;EDvLJ;IAIQ;;;;AAIR;EACI;EACA;;AC6KA;ED/KJ;IAIQ;;;;AErCR;EACI;EACA;EACA;;AD6MA;EChNJ;IAMQ;IAEI;IACA;IAEJ;;;;AAIR;EDgBI;EAII,oBCnB0B;EAC9B;EACA;EACA;;AD6LA;ECjMJ;IDgBI;IAEI;IAOQ,gBCnBuD;;;AD2LnE;ECjMJ;IASQ;;;;ACxBR;EACI;;AF+MA;EEhNJ;IAGQ;;;AF6MJ;EEhNJ;IAMQ;;;;ACNR;EACI;ECHA;EDMI;EACA;EACA;;AH0MJ;EGhNJ;IASQ;;;AHuMJ;EGhNJ;IAYQ;IACA;ICfJ;;;;ACGA;EACI;;AL8MJ;EK/MA;IAGQ;;;AAIR;EAAiB;;AAEjB;EACI;EACA;EACA;;ALmMJ;EKtMA;IAKQ;IACA;;;ALgMR;EKtMA;IASQ;;;;ACjBR;ENqFA;EAII,gBMxFgC;EN6FlB,iBM7F0D;EN+F5D,aM/FuC;EACnD;EACA;;AN2MJ;EM9MA;INqFA;IAII,gBMpFoC;INyFtB,iBMzF4C;IACtD;;;ANwMR;EM9MA;INqFA;IASkB,iBMrF6B;IACvC;IACA;;;ANmMR;EM9MA;IAcQ;IACA;;;AAIR;ENkEA;EAII,gBMrEgC;EN4EpB,aM5EuC;;AN0LvD;EM3LA;INkEA;IAWgB,aM1E6B;;;AAGzC;EAAO;;AAGX;EAEQ;EACA;EACA;EAEJ;;AN4KJ;EMlLA;IAQQ;;;AN0KR;EMlLA;IAWQ;;;AAIR;EAEQ;EACA;EAEJ;EACA;EACA;;AN4JJ;EMnKA;IASQ;;;AN0JR;EMnKA;IAYQ;;;;ACxDZ;EACI;EAEI;EACA;EAEJ;EACA;;APwMA;EO/MJ;IASQ;;;AAGJ;EACI;EACA;EACA;;;ACdJ;EACI;;AAEA;EACI","file":"app.css","sourcesContent":["@use 'sass:string';\r\n@import 'https://fonts.googleapis.com/css2?family=Inter:wght@400;700&family=Lexend+Deca&display=swap';\r\n\r\n//********************************* \r\n//* FONTS \r\n//*********************************\r\n$ff: (\r\n    'Inter': string.quote('Inter'),\r\n    'Lexend': string.quote('Lexend Deca')\r\n);\r\n","@use '../theme' as thm;\r\n@use 'sass:map';\r\n@use 'sass:color';\r\n\r\n//********************************* \r\n//* HTML TAGS \r\n//*********************************\r\nhtml {\r\n    font-size: 62.5%;\r\n    @include thm.less-box();\r\n}\r\n\r\nbody {\r\n    min-inline-size: 37.5rem;\r\n    font-size: 16px;\r\n    background-color: map.get(thm.$clr, 'dk-blue-100');\r\n}\r\n\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    @include thm.less-box();\r\n}\r\n\r\n//********************************* \r\n//* TYPOGRAHPY \r\n//*********************************\r\n.information__header > h1,\r\n.information__paragraph > p,\r\nspan { font-family: map.get(thm.$ff, 'Inter'); }\r\n\r\n.information__header > h1 {\r\n    font-size: 2.4rem;\r\n    color: map.get(thm.$clr, 'white');\r\n    @include thm.less-query($device: 'smartphone', $size: 'md') {\r\n        font-size: 3.5rem;\r\n    }\r\n}\r\n\r\n.information__paragraph > p {\r\n    font-size: 1.2rem;\r\n    color: color.change(map.get(thm.$clr, 'white'), $alpha: .75);\r\n    @include thm.less-query($device: 'smartphone', $size: 'md') {\r\n        font-size: 1.4rem;\r\n    }\r\n}","////////////////////////// \r\n// *** LESSIER 1.4 *** // \r\n///////////////////////// \r\n\r\n@use 'sass:math';\r\n@use 'sass:map';\r\n@use 'sass:list';\r\n@use 'sass:meta';\r\n@use 'sass:selector';\r\n@use 'sass:string';\r\n@use 'sass:color';\r\n\r\n///////////////////// \r\n// *** MIXINS *** //\r\n////////////////////\r\n\r\n//************************\r\n//* CSS GRID\r\n//************************ \r\n@mixin grid\r\n(\r\n    $rows: false, \r\n    $cols: false, \r\n    $flow: false, \r\n    $auto-rows: false, \r\n    $auto-cols: false,  \r\n    $plc-items: false, \r\n    $jt-items: false, \r\n    $al-items: false, \r\n    $plc-content: false,\r\n    $jt-content: false, \r\n    $al-content: false, \r\n    $row-gap: false, \r\n    $col-gap: false,\r\n    $gap: false\r\n) \r\n{\r\n    display: grid;\r\n    @if $rows and $cols {\r\n        grid: $rows / $cols;\r\n    } @else if $rows {\r\n        grid-template-rows: $rows;\r\n    } @else if $cols {\r\n        grid-template-columns: $cols;\r\n    }\r\n\r\n    @if $flow { grid-auto-flow: $flow; }\r\n    \r\n    @if $auto-rows { grid-auto-rows: $auto-rows; }\r\n\r\n    @if $auto-cols { grid-auto-columns: $auto-cols; }\r\n\r\n    @if $plc-items {\r\n        place-items: $plc-items;\r\n    } @else if $jt-items and $al-items {\r\n        @error 'You are trying to use the $jt-items and $al-items arguments individually instead of using the shorthand $plc-items for fewer code';\r\n    } @else if $jt-items {\r\n        justify-items: $jt-items;\r\n    } @else if $al-items {\r\n        align-items: $al-items;\r\n    }\r\n\r\n    @if $plc-content {\r\n        place-content: $plc-content;\r\n    } @else if $jt-content and $al-content {\r\n        @error 'You are trying to use the $jt-content and $al-content arguments individually instead of using the shorthand $plc-content for fewer code';\r\n    } @else if $jt-content {\r\n        justify-content: $jt-content;\r\n    } @else if $al-content {\r\n        align-content: $al-content;\r\n    }\r\n\r\n    @if $gap { \r\n        gap: $gap; \r\n    } @else if $row-gap {\r\n        row-gap: $row-gap;\r\n    } @else if $col-gap {\r\n        column-gap: $col-gap;\r\n    }\r\n}\r\n\r\n//************************\r\n//* CSS FLEXBOX\r\n//************************\r\n@mixin flexbox\r\n(\r\n    $dir: false, \r\n    $wrap: false, \r\n    $jt-content: false, \r\n    $al-items: false,\r\n    $gap: false\r\n)\r\n{\r\n    display: flex;\r\n    @if $dir and $wrap {\r\n        flex-flow: $dir $wrap;\r\n    } @else if $dir {\r\n        flex-direction: $dir;\r\n    } @else if $wrap {\r\n        flex-wrap: $wrap;\r\n    }\r\n\r\n    @if $jt-content { justify-content: $jt-content; }\r\n\r\n    @if $al-items { align-items: $al-items; }\r\n\r\n    @if $gap { gap: $gap; }\r\n}\r\n\r\n//************************\r\n//* PSEUDO-ELEMENT\r\n//************************\r\n@mixin pseudo-element\r\n(\r\n    $loc: before, \r\n    $cont: '',\r\n    $pos: absolute,\r\n    $inset: false,\r\n    $top: 0,\r\n    $bottom: 0,\r\n    $left: 0,\r\n    $right: 0\r\n) \r\n{\r\n    position: relative;\r\n    &::#{$loc} {\r\n        content: $cont;\r\n        position: $pos;\r\n        @if $inset {\r\n            inset: $inset;\r\n        } @else if $inset == false {\r\n            inset: $top $right $bottom $left;\r\n        }\r\n        @content;\r\n    }\r\n}\r\n\r\n//************************\r\n//* SUPPORT\r\n//************************ \r\n@mixin support\r\n(\r\n    $property: false, \r\n    $value: false, \r\n    $support: false,\r\n    $args...\r\n) \r\n{\r\n    #{$property}: $value;\r\n    @supports not (#{$property}: $value) {\r\n        #{$property}: $value; \r\n        @if $support {\r\n            @each $key, $prefix in meta.keywords($args) {\r\n                -#{$prefix}-#{$property}: $value;\r\n            }\r\n        } @else if $support != true {\r\n            -webkit-#{$property}: $value;\r\n            -moz-#{$property}: $value;\r\n            -ms-#{$property}: $value;\r\n            -o-#{$property}: $value;\r\n        }\r\n    }\r\n}\r\n\r\n//************************\r\n//* SHADOW\r\n//************************\r\n@mixin shadow\r\n(\r\n    $type: box,\r\n    $x-axis: 0, \r\n    $y-axis: 0, \r\n    $blur: 0, \r\n    $spread: 0, \r\n    $color: #000, \r\n) \r\n{\r\n    @if $type == 'box' {\r\n        #{$type}-shadow: $x-axis $y-axis $blur $spread $color;\r\n    } @else if $type == 'text' {\r\n        #{$type}-shadow: $x-axis $y-axis $blur $color;\r\n    } @else {\r\n        @error '#{$type} is an unknown value, try using either box or text for creating shadows';\r\n    }\r\n}\r\n\r\n//************************\r\n//* MEDIA QUERIES\r\n//************************\r\n$screen-sizes: \r\n(\r\n    'smartphone': (\r\n        'sm': 480px,\r\n        'md': 552px,\r\n    ),\r\n    'tablet': (\r\n        'sm': 818px,\r\n        'md': 912px,\r\n        'lg': 1080px\r\n    ),\r\n    'desktop': (\r\n        'sm': 1212px,\r\n        'md': 1440px\r\n    )\r\n);\r\n\r\n@mixin query\r\n(\r\n    $type: min-width, \r\n    $device: false, \r\n    $size: false\r\n) \r\n{\r\n    $screen: map.get($screen-sizes, $device, $size); \r\n    @media (#{$type}: $screen) { @content; }\r\n\r\n    @if $device == false { \r\n        @error 'You have not given an available device value for your media query yet'; \r\n    } @else if $size == false {\r\n        @error 'You have not given an available screen size for your media query yet';\r\n    }\r\n}\r\n\r\n//************************\r\n//* BOX-MODEL\r\n//************************\r\n@mixin box() {\r\n    $selector: selector.parse(&);\r\n    $parent-1: selector.parse('html');\r\n    $parent-2: selector.parse('*');\r\n\r\n    @if $parent-1 == $selector {\r\n        box-sizing: border-box;\r\n    } @else if $parent-2 == $selector {\r\n        &,\r\n        &::before,\r\n        &::after { box-sizing: inherit; }\r\n    } @else {\r\n        @error 'You are trying to parse this mixin within a selector that is neither #{$parent-1} or #{$parent-2}';\r\n    }\r\n}\r\n\r\n//************************\r\n//* COMING SOON...\r\n//************************","@use '../theme' as thm;\r\n@use 'sass:map';\r\n\r\n//********************************* \r\n//* UTILITIES \r\n//*********************************\r\n.wrapper {\r\n    margin-block: 4rem;\r\n    inline-size: clamp(28rem, 100%, 110rem);\r\n    padding-inline: 2rem;\r\n\r\n    @include thm.less-query($device: 'tablet', $size: 'sm') {\r\n        position: absolute;\r\n        inset: {\r\n            block-start: 50%;\r\n            inline-start: 50%;\r\n        }\r\n        transform: translate(-50%, -50%);\r\n    }\r\n}\r\n\r\n.card-container {\r\n    @include thm.less-grid($rows: repeat(3, auto));\r\n    border-radius: .5rem;\r\n    background-color: map.get(thm.$clr, 'dk-blue-200');\r\n    overflow: hidden;\r\n    @include thm.less-query($device: 'tablet', $size: 'sm') {\r\n        @include thm.less-grid($rows: auto, $cols: 47.5% 52.5%, $flow: dense);\r\n    }\r\n    @include thm.less-query($device: 'tablet', $size: 'lg') {\r\n        border-radius: 1rem;\r\n    }\r\n}","@use '../theme' as thm;\r\n@use 'sass:map';\r\n\r\n//********************************* \r\n//* MAIN-CONTAINER \r\n//*********************************\r\n.main-container {\r\n    padding: 3rem 2.5rem 2rem;\r\n    @include thm.less-query($device: 'tablet', $size: 'sm') {\r\n        padding: 5rem;\r\n    }\r\n    @include thm.less-query($device: 'tablet', $size: 'lg') {\r\n        padding: 8rem 6rem;\r\n    }\r\n}","@use '../theme' as thm;\r\n@use 'sass:map';\r\n\r\n//********************************* \r\n//* IMAGE-CONTAINER \r\n//*********************************\r\n.image-container {\r\n    block-size: 17.5rem;\r\n    @include thm.mx-url-img();\r\n    background: {\r\n        color: map.get(thm.$clr, 'lt-violet-200');\r\n        size: cover;\r\n        blend-mode: soft-light;\r\n    }\r\n    @include thm.less-query($device: 'smartphone', $size: 'md') {\r\n        block-size: 25rem;\r\n    }\r\n    @include thm.less-query($device: 'tablet', $size: 'sm') {\r\n        grid-column: span 1 / -1;\r\n        block-size: 100%;\r\n        @include thm.mx-url-img('desktop');\r\n    }\r\n}","//********************************* \r\n//* COLORS \r\n//*********************************\r\n@mixin url-img($device: 'mobile') {\r\n    background-image: url('https://said-alrove.github.io/stats-preview-card-sass/assets/jpg/image-header-#{$device}.jpg');\r\n}","@use '../theme' as thm;\r\n@use 'sass:map';\r\n\r\n//********************************* \r\n//* INFORMATION-CONTAINER\r\n//*********************************\r\n.information {\r\n    &-container { \r\n        text-align: center; \r\n        @include thm.less-query($device: 'tablet', $size: 'sm') { \r\n            text-align: initial;\r\n        }\r\n    }\r\n\r\n    &__header span { color: map.get(thm.$clr, 'lt-violet-100'); }\r\n\r\n    &__paragraph > p {\r\n        margin-block: 1.5rem;\r\n        padding-inline: .5rem;\r\n        line-height: 1.8;\r\n        @include thm.less-query($device: 'smartphone', $size: 'md') {\r\n            margin-block: 2.2rem;\r\n            padding-inline: .75rem;\r\n        }\r\n        @include thm.less-query($device: 'tablet', $size: 'lg') {\r\n            padding-inline-end: 4rem;\r\n        }\r\n    }\r\n}","@use '../theme' as thm;\r\n@use 'sass:map';\r\n@use 'sass:color';\r\n\r\n//********************************* \r\n//* STATS-CONTAINER \r\n//*********************************\r\n.stats {\r\n    &-container {\r\n        @include thm.less-flexbox($dir: column, $al-items: center, $jt-content: space-between);\r\n        margin-block-start: 2rem;\r\n        block-size: 15rem;\r\n        @include thm.less-query($device: 'smartphone', $size: 'md') {\r\n            @include thm.less-flexbox($dir: initial, $jt-content: space-around);\r\n            block-size: 8rem;\r\n        }\r\n        @include thm.less-query($device: 'tablet', $size: 'sm') {\r\n            @include thm.less-flexbox($jt-content: space-between);\r\n            margin-block-start: 6rem;\r\n            block-size: 5rem;\r\n        } \r\n        @include thm.less-query($device: 'tablet', $size: 'lg') {\r\n            margin-block-start: 8rem;\r\n            padding-inline-end: 8rem;\r\n        }\r\n    }\r\n\r\n    &__item {\r\n        @include thm.less-flexbox($dir: column, $al-items: center);\r\n        @include thm.less-query($device: 'tablet', $size: 'sm') {\r\n            @include thm.less-flexbox($al-items: initial);\r\n        }\r\n\r\n        span { margin-block: .2rem; }\r\n    }\r\n\r\n    &__number {\r\n        font: {\r\n            family: map.get(thm.$ff, 'Inter');\r\n            size: 1.8rem;\r\n            weight: bold;\r\n        }\r\n        color: map.get(thm.$clr, 'white');\r\n        @include thm.less-query($device: 'tablet', $size: 'sm') {\r\n            font-size: 2.2rem;\r\n        }\r\n        @include thm.less-query($device: 'tablet', $size: 'lg') {\r\n            font-size: 2.4rem;\r\n        }\r\n    }\r\n\r\n    &__name {\r\n        font: {\r\n            family: map.get(thm.$ff, 'Lexend');\r\n            size: 1rem;\r\n        }\r\n        text-transform: uppercase;\r\n        letter-spacing: .1em;\r\n        color: color.change(map.get(thm.$clr, 'white'), $alpha: .6);\r\n        @include thm.less-query($device: 'smartphone', $size: 'md') {\r\n            font-size: 1.2rem;\r\n        }\r\n        @include thm.less-query($device: 'tablet', $size: 'lg') {\r\n            font-size: 1.4rem;\r\n        }\r\n    }\r\n}","@use '../theme' as thm;\r\n@use 'sass:map';\r\n@use 'sass:color';\r\n\r\n//********************************* \r\n//* ATTRIBUTION\r\n//*********************************\r\n.attribution {\r\n    margin-block: 2rem;\r\n    font: {\r\n        family: map.get(thm.$ff, 'Inter');\r\n        size: 1.2rem;\r\n    }\r\n    text-align: center;\r\n    color: map.get(thm.$clr, 'white');\r\n    @include thm.less-query($device: 'tablet', $size: 'md') {\r\n        font-size: 1.4rem;\r\n    }\r\n\r\n    > a {\r\n        color: color.change(map.get(thm.$clr, 'white'), $alpha: .5);\r\n        font-weight: bold;\r\n        text-decoration: none;\r\n    }\r\n}","@use '../theme' as thm;\r\n@use 'sass:map';\r\n@use 'sass:color';\r\n\r\n//********************************* \r\n//* STATES \r\n//*********************************\r\n.attribution {\r\n    > a {\r\n        transition: all 200ms ease-in-out;\r\n\r\n        &:hover {\r\n            color: color.scale(map.get(thm.$clr, 'white'), $lightness: -50%);\r\n        }\r\n    }\r\n}"]}